spring:
  application:
    name: apigateway
  security:
    user:
      name: disabled
      password: disabled
  codec:
    max-in-memory-size: 10MB  # Increase if needed
  cloud:
    gateway:
      routes:
        - id: sf-auth
          uri: lb://SF-AUTH
          predicates:
            - Path=/api/auth/**
        - id: sf-usermanagement
          uri: lb://SF-USERMANAGEMENT
          predicates:
            - Path=/api/v1/user/**
        - id: sf-bookingmanagement
          uri: lb://SF-BOOKINGMANAGEMENT
          predicates:
            - Path=/api/bookings/**
        - id: sf-property-service
          uri: lb://SF-PROPERTY-SERVICE
          predicates:
            - Path=/api/pgs/**
          filters:
            - StripPrefix=0
            - name: PreserveHostHeader
        - id: sf-property-service
          uri: lb://SF-PROPERTY-SERVICE
          predicates:
            - Path=/api/pgs/*/rooms/**
          filters:
            - StripPrefix=0
            - name: PreserveHostHeader
        - id: sf-paymentmanagement
          uri: lb://SF-PAYMENTMANAGEMENT
          predicates:
            - Path=/api/payments/**
        - id: sf-property-service
          uri: lb://SF-PROPERTY-SERVICE
          predicates:
            - Path=/api/images/**
          filters:
            - StripPrefix=0
            - name: PreserveHostHeader

      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins:
              - "http://localhost:9091"
              - "http://localhost:8081"
              - "http://localhost:8083"
              - "http://localhost:8085"
              - "http://localhost:8095"
              - "http://localhost:3000"

            allowedMethods:
              - GET
              - POST
              - DELETE
              - PUT
            allowedHeaders:
              - "*"
            allowCredentials: true

  jwt:
    keystore:
      location: classpath:jwt-keystore.jks
      password: password
      alias: jwt-key

server:
  port: 8000

logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    reactor.netty.http.client: DEBUG

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

